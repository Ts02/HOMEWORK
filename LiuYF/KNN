from sklearn.datasets import fetch_openml
from sklearn.model_selection import train_test_split
import ssl;
import matplotlib.pyplot as plt
import numpy as np


ssl._create_default_https_context = ssl._create_unverified_context;
images, targets = fetch_openml("mnist_784", return_X_y=True, as_frame=False)

# 可视化图片
images = images.reshape(-1, 28, 28)
plt.imshow(images[0], cmap='gray')
plt.show()

# 取3个类各200张图完成即可
# 示例取类2,3,4
classes = ['2', '3', '4']
data = []
label = [[i]*200 for i in range(len(classes))]
for l in classes:
    data.append(images[targets == l][: 200])
data = np.concatenate(data, axis=0)
label = np.concatenate(label)
data = data.reshape(600, -1) / 255 # 压缩值0-1之间方便计算距离

# 划分数据集为训练集和测试集
X_train, X_test, y_train, y_test = train_test_split(data, label)

# 建立映射方便表示。由于我们只取3类,映射为0,1,2就行
class_map = {'2' : 0, '3': 1, '4': 2}


def KNN(X_test, X_train, y_train, y_test, k):
    accu = 0
    inaccu = 0
    id = 0
    for i in X_test:
        sds = []
        for j in X_train:
            sds.append(np.sum((i - j) ** 2) ** 0.5)
        distances = sds
        index_i = []
        for u in range(k):
            index = sds.index(min(sds))
            del sds[index]
            index_i.append(y_train[index])  # 记录最小值索引
        count = [0, 0 ,0]
        for h in index_i:
            count[h] += 1
        y_hat = count.index(max(count))
        if(y_hat == y_test[id]):
            accu += 1
        else:
            inaccu += 1
        id += 1
    print(accu)
    print("err:", inaccu)


for i in range(20, 25):
    KNN(X_test, X_train, y_train, y_test, i)

